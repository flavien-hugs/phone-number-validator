name: Test and Code quality CI

on: [push]

jobs:
    code-quality:
        strategy:
          fail-fast: false
          matrix:
            python-version:
              - "3.x"
            os: [ ubuntu-latest ]
        runs-on: ${{ matrix.os }}
        environment:
            name: code-quality
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}

            - name: Install pipx, Poetry and Upgrade pip/setuptools
              run: |
                  python --version
                  python -m pip install pipx
                  python -m pipx ensurepath
                  python -m pipx install poetry
                  export PATH=$PATH:/root/.local/bin
                  poetry env use python
                  poetry run pip install --upgrade pip setuptools
                  poetry install --no-root

            - name: Run black
              run: poetry run black . --check

            - name: Run flake8
              run: poetry run flake8 .

            - name: Run bandit
              run: poetry run bandit .

    tests:
        needs: [code-quality]
        strategy:
          fail-fast: false
          max-parallel: 4
          matrix:
            python-version:
              - "3.x"
            os: [ubuntu-latest]
        runs-on: ${{ matrix.os }}
        environment:
          name: tests
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}

            - name: Install pipx, Poetry and Upgrade pip/setuptools
              run: |
                python --version
                python -m pip install pipx
                python -m pipx ensurepath
                python -m pipx install poetry
                export PATH=$PATH:/root/.local/bin
                poetry env use python
                poetry run pip install --upgrade pip setuptools
                poetry install --no-root

            - name: Run Tests
              run: |
                echo "Starting tests ..."
                poetry run pytest --cov --cov-report term --cov-report xml:coverage.xml tests

            - name: Upload coverage report
              uses: actions/upload-artifact@v3
              with:
                name: coverage
                path: coverage.xml
